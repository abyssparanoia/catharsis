// Code generated by MockGen. DO NOT EDIT.
// Source: ./service/user.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	service "github.com/abyssparanoia/catharsis/authentication/service"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUser is a mock of User interface
type MockUser struct {
	ctrl     *gomock.Controller
	recorder *MockUserMockRecorder
}

// MockUserMockRecorder is the mock recorder for MockUser
type MockUserMockRecorder struct {
	mock *MockUser
}

// NewMockUser creates a new mock instance
func NewMockUser(ctrl *gomock.Controller) *MockUser {
	mock := &MockUser{ctrl: ctrl}
	mock.recorder = &MockUserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUser) EXPECT() *MockUserMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockUser) Create(ctx context.Context, paylaod service.UserCreatePayload) (*service.UserCreateResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, paylaod)
	ret0, _ := ret[0].(*service.UserCreateResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockUserMockRecorder) Create(ctx, paylaod interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockUser)(nil).Create), ctx, paylaod)
}
