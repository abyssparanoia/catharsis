// Code generated by MockGen. DO NOT EDIT.
// Source: ./sign_service.go

// Package mock_jwtauth is a generated GoMock package.
package mock_jwtauth

import (
	context "context"
	jwtauth "github.com/abyssparanoia/catharsis/pkg/jwtauth"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSignService is a mock of SignService interface
type MockSignService struct {
	ctrl     *gomock.Controller
	recorder *MockSignServiceMockRecorder
}

// MockSignServiceMockRecorder is the mock recorder for MockSignService
type MockSignServiceMockRecorder struct {
	mock *MockSignService
}

// NewMockSignService creates a new mock instance
func NewMockSignService(ctrl *gomock.Controller) *MockSignService {
	mock := &MockSignService{ctrl: ctrl}
	mock.recorder = &MockSignServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSignService) EXPECT() *MockSignServiceMockRecorder {
	return m.recorder
}

// GenerateToken mocks base method
func (m *MockSignService) GenerateToken(ctx context.Context, claims *jwtauth.Claims) (string, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateToken", ctx, claims)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GenerateToken indicates an expected call of GenerateToken
func (mr *MockSignServiceMockRecorder) GenerateToken(ctx, claims interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateToken", reflect.TypeOf((*MockSignService)(nil).GenerateToken), ctx, claims)
}
